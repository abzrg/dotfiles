#!/bin/sh

# --- SENSIBLE DEFAULTS + VERBOSITY
alias \
    cp="cp -iv"                         \
    mv="mv -iv"                         \
    rm="rm -vI"                         \
    ln="ln -v"                          \
    mkd="mkdir -pv"                     \
    duh="du -h -d 0 [^.]*"              \
    yt="youtube-dl --add-metadata -ci"  \
    yta="yt -x -f bestaudio/best"       \
    ytb="yt -f bestvideo+bestaudio"     \
    ytpl="yt -o '%(playlist_index)s-%(title)s.%(ext)s'" \
    ytbpl="yt -f bestvideo/bestaudio -o '%(playlist_index)s-%(title)s.%(ext)s'"
    # ffmpeg="ffmpeg -hide_banner"      \

# --- COLORIZE COMMANDS
alias \
    ls="ls -hNFXG --color=auto --group-directories-first"    \
    l='ls'                                                  \
    ll="ls -ali"                                            \
    grep="grep --color=auto"                                \
    egrep="egrep --color=auto"                              \
    fgrep="fgrep --color=auto"                              \
    diff="diff --color=auto"

# --- LONG COMMANDS
alias \
    df='df -h'                          \
    a="sudo apt"                        \
    e="$EDITOR"                         \
    f="$FILE"                           \
    g="git"                             \
    o='xdg-open'                        \
    v="$VISUAL"                         \
    p="zathura"                         \
    ka="killall"                        \
    grp="grep -Rli"                     \
    SS="sudo systemctl"                 \
    free='free -m'                      \
    chbin='chmod 755'                   \
    chreg='chmod 644'                   \
    sdn="sudo shutdown -h now"          \
    trem="transmission-remote"          \
    merge='xrdb -merge ~/.Xresources'   \
    slc="make clean && rm -f config.h"     \
    myip="curl http://myip.dnsomatic.com && echo ''" \
    visudo='sudo EDITOR=nvim visudo -f /etc/sudoers.d/ali' \
    conda_a='source ~/bin/anaconda3/bin/activate' \
    conda_d='conda deactivate' \
    c='/usr/bin/git --git-dir=$HOME/repos/dotfiles/ --work-tree=$HOME' \
    alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"' \

# --- DIRECTORIES
alias \
    cd..='cd ..'                                    \
    m="cd ${XDG_MUSIC_DIR:-$HOME/Music}"            \
    cf="cd ${XDG_CONFIG_HOME:-$HOME/.config}"       \
    dl="cd ${XDG_DOWNLOAD_DIR:-$HOME/Downloads}"    \
    dt="cd ${XDG_DATA_HOME:-$HOME/.local/share}"    \
    sc="cd $HOME/.local/bin"                        \
    scr="cd $HOME/.local/scripts"                   \
    doc="cd ${XDG_DOCUMENTS_DIR:-$HOME/Documents}"  \
    pic="cd ${XDG_PICTURES_DIR:-$HOME/Pictures}"    \
    vid="cd ${XDG_VIDEOS_DIR:-$HOME/Videos}"        \

# --- FILES
alias \
    inp="$EDITOR $HOME/.config/inputrc"         \
    xre="$EDITOR $HOME/.Xresources"             \
    xin="$EDITOR $HOME/.xinitrc"                \
    cfb="$EDITOR $HOME/.bashrc"                 \
    cfz="$EDITOR $HOME/.config/zsh/.zshrc"      \
    cfzp="$EDITOR $HOME/.zprofile"              \
    cfp="$EDITOR $HOME/.profile"                \
    cft="$EDITOR $HOME/.tmux.conf"              \
    cfs="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/sxhkd/sxhkdrc"       \
    cfa="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/aliasrc"             \
    cfP="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/picom.conf"          \
    cfl="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/lf/lfrc"             \
    cfm="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/mutt/muttrc"         \
    cfmb="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/ncmpcpp/bindings"   \
    cfmc="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/ncmpcpp/config"     \
    cfn="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/newsboat/config"     \
    cfu="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/newsboat/urls"       \
    cfv="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/nvim/init.vim"       \
    cfx="$EDITOR ${XDG_CONFIG_HOME:-$HOME/.config}/sxiv/exec/key-handler" \

# --- Pretty print the path
alias path='echo $PATH | tr -s ":" "\n"'

# --- Libreoffice
alias \
    writer="libreoffice --writer"   \
    calc="libreoffice --calc"       \
    impress="libreoffice --impress"

# --- Use nevim for vim if present.
command -v nvim >/dev/null && alias vim="nvim" vimdiff="nvim -d"

# --- FUNCTIONS

# Spell checker
spell() {
    echo $@ | hunspell -d en_US | grep '^&'
}

# Dictionary (sdcv)
d() {
    # Data in ~/.local/share/stardict/dic/
    sdcv -n --utf8-output --color "$@" 2>&1 | \
        fold --width=$(tput cols) | \
        less -FRX
}

# Commandline Google translate
tra() { trans -d -e aspell -bidi "$@" | less -R ;}
alias enfa='tra en:fa' \
    faen='tra fa:en' \
    ende='tra en:de' \
    enfr='tra en:fr' \
    jaen='tra ja:en' \
    enja='tra en:ja'

# Pronounce a word (uses translate program)
prnc() {
    mpv --no-config ~/Documents/test/gb/"$@".mp3 1>/dev/null 2>&1 || \
        trans -speak "$@" &>/dev/null
}

odef() {
    # dict network protocol
    curl -s dict://dict.org/d:"$@" | less -F -X -R
}

# Extract everything
ex() {
    # -- ARCHIVE EXTRACTION
    # usage: ex <file>
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1   ;;
            *.tar.gz)    tar xzf $1   ;;
            *.bz2)       bunzip2 $1   ;;
            *.rar)       unrar x $1   ;;
            *.gz)        gunzip $1    ;;
            *.tar)       tar xf $1    ;;
            *.tbz2)      tar xjf $1   ;;
            *.tgz)       tar xzf $1   ;;
            *.zip)       unzip $1     ;;
            *.Z)         uncompress $1;;
            *.7z)        7z x $1      ;;
            *.deb)       ar x $1      ;;
            *.tar.xz)    tar xf $1    ;;
            *.tar.zst)   unzstd $1    ;;
            *)           echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Download documents!
shdl() { curl -O $(curl -s https://sci-hub.st/"$@" | grep location.href | grep -o http.*pdf) ;}
# shdl() { curl -O $(curl -s https://sci-hub.st/"$@" | grep location.href | grep -o https.*pdf) ;}
# shdl() { curl -O $(curl -s https://sci-hub.scihubtw.st/"$@" | grep location.href | grep -o https.*pdf) ;}

# Search through the scripts
se() {
    du -a ~/.local/{bin,scripts}/* | awk '{print $2}' | fzf | xargs -r $EDITOR
}

# PACMAN-related Utilities
install_with_fzf() {
    pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | \
        xargs -ro sudo pacman -S
}
remove_with_fzf() {
    pacman -Qq | fzf --multi --preview 'pacman -Qi {1}' | \
        xargs -ro sudo pacman -Rns
}

# Create files containing list of all files and folders under the ~
# These files are created for faster access in following functions
update_fzf() {
    # Update fzf files & directories
    find $HOME -type f 2>/dev/null | \
        egrep -v ".cache|.git|.svn" \
        > ~/.cache/files

    find $HOME -type d 2>/dev/null | \
        egrep -v ".cache|.git|.svn" \
        > ~/.cache/directories
}
open_with_fzf() {
    cat ~/.cache/files | fzf | xargs -ro -d "\n" xdg-open 2>&-
}
text_file_with_fzf() {
    cat ~/.cache/files  | fzf -m --height 100% --preview="less {}" | \
        xargs -ro -d "\n" $EDITOR -p  2>&-
}
text_file_cur_dir_with_fzf() {
    fd -t f -H -I  | fzf -m --no-height --preview="less {}" | \
        xargs -ro -d "\n" $EDITOR -p  2>&-
}
cd_with_fzf() {
    # cd $HOME && cd "$(fd -H -t d . $HOME | fzf --preview="tree -C -L 1 {}" --bind="ctrl-space:toggle-preview" --preview-window=:hidden)"
    cd "$(\
        cat ~/.cache/directories | \
        fzf --preview="tree -C -L 1 {}" \
        --bind="ctrl-x:toggle-preview" --preview-window=:hidden \
        )"
}

# Artixlinux
enable() { [ -z "$1" ] && exit; sudo ln -s /etc/runit/sv/$1 /run/runit/service ;}
disable() { [ -z "$1" ] && exit; sudo rm /run/runit/service/$1 ;}
restart() { [ -z "$1" ] && exit; sudo sv restart $1 ;}
