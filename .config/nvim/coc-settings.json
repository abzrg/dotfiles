{
  // Disable color
  "coc.preferences.colorSupport": false,

  // Prettier
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "html",
    "markdown",
    "json",
    "graphql",
    "elixir",
    "eelixir"
  ],

  // Fit code within this line limit
  "prettier.printWidth": 80,
  // Number of spaces it should use per tab
  "prettier.tabWidth": 2,
  // If true, will use single instead of double quotes
  "prettier.singleQuote": true,
  // Controls the printing of trailing commas wherever possible. Valid options:
  "prettier.trailingComma": "none",
  // Controls the printing of spaces inside object literals
  "prettier.bracketSpacing": false,
  // If true, puts the > of a multi-line jsx element at the end of the last line instead of being alone on the next line
  "prettier.jsxBracketSameLine": false,
  // Which parser to use. Valid options are 'flow' and 'babylon'. (JavaScript only)
  "prettier.parser": "flow",
  // Whether to add a semicolon at the end of every line (semi: true), or only at the beginning of lines that may introduce ASI failures (semi: false)
  "prettier.semi": true,
  // If true, indent lines with tabs
  "prettier.useTabs": false,
  // (Markdown) wrap prose over multiple lines.
  "prettier.proseWrap": "preserve",
  // Include parentheses around a sole arrow function parameter
  "prettier.arrowParens": "avoid",

  // Snippets
  "snippets.userSnippetsDirectory": "~/.config/nvim/snips",

  // Clang
  "languageserver": {
    "clangd": {
      "command": "clangd",
      "rootPatterns": ["compile_flags.txt", "compile_commands.json"],
      "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"]
    }
  }
}

// "disableDiagnostics": true,
